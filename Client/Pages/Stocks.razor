@page "/Stocks"
@using Client.Components
@using Client.Components.Stocks
@using Client.Helpers
@using Client.ServicesBridge
@using Client.States.Toast
@using Common.Classes.Investments;
@using Common.DTO.Stocks
@using Common.Entities.Investments
@using Common.Entities.Users
@using Common.HttpClients;
@using Client.States;
@using System.Globalization;
@inject NavigationManager _navigationManager;
@inject GenericHttpClient _genericHttpClient;
@inject UserState _userState;
@inject ToasterService _toasterService;
@inject ILocalStorageService _localStorage;


<AuthorizeView>
    <NotAuthorized>
    @if (true) { _navigationManager.NavigateTo("Login"); }
    </NotAuthorized>
    <Authorized>
        <div class="page-wrapper">
            <div class="row">
                @*Your investments*@
                <div class="col-md-6">
                    <h4 class="@_userTheme-card">Your investments </h4>
                    @if (!_investedCryptosLoaded)
                    {
                        <div class="text-center">
                          <div class="spinner-border" role="status">
                          </div>
                        </div>
                    }
                    else
                    {
                        @if(_investedCryptos is null || _investedCryptos.Count() == 0)
                        {
                            <h4 style="text-align: center;">No investments yet &#128077;</h4>
                        }
                        else
                        {
                         <table class="table @_userTheme-table">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Shares</th>
                                    <th>Price</th>
                                    <th>Current Value</th>
                                    <td>&nbsp;</td>
                                </tr>
                            </thead>
                            <tbody>
                            @foreach(var investment in _investedCryptos)
                            {

                                <tr class="@_userTheme-table-tr">
                                    <td>@investment.Symbol</td>
                                    <td>@investment.Share</td>
                                    <td>💎@investment.Price</td>
                                    @{
                                        var currentValue = @GetCurrentValue(investment); 
                                        var diff = currentValue - (investment.Price * investment.Share);
                                    }
                                    <td>
                                    @if(currentValue < investment.TotalCost())
                                    {
                                        <span class="desktopStockDiff" style="color: red">@currentValue (@diff)</span>
                                        <span class="mobileStockDiff" style="color: red">@GetMobileValue(@diff)</span>
                                    }
                                    else if(currentValue > investment.TotalCost())
                                    {
                                        <span class="desktopStockDiff" style="color: green">@currentValue (@diff)</span>
                                        <span class="mobileStockDiff" style="color: green">@GetMobileValue(@diff)</span>
                                    }
                                    else
                                    {
                                        <span class="desktopStockDiff" style="color: yellow">@currentValue</span>
                                        <span class="mobileStockDiff" style="color: yellow">@GetMobileValue(@diff)</span>
                                    }
                                    </td>
                                    <td>
                                       <button class="btn btn-primary @_userTheme-btn-primary" style="float:right">
                                            <span class="oi oi-pencil" aria-hidden="true" @onclick="(() => OpenSellDialogModal(investment, ModalType.Create))"></span>
                                       </button>
                                    </td>
                                 </tr>
                            }
                            </tbody>
                        </table>
                        }
                    }

                    <br /> 

                    @if (!_historicalStocksLoaded)
                    {
                        <div class="text-center">
                          <div class="spinner-border" role="status">
                          </div>
                        </div>
                    }
                    else
                    {
                        @if(_historical is null || _historical.Count() == 0)
                        {
                            <h4 style="text-align: center;">No history yet &#128077;</h4>
                        }
                        else
                        {
                        
                            <ApexChart TItem="UserHistoricalStocks" Title="Historical Stocks" Options="_chartOptions">
                                 <ApexPointSeries 
                                     TItem="UserHistoricalStocks"
                                     Items="_historical"
                                     Name="Trades"
                                     SeriesType="SeriesType.Bar"
                                     XValue="@(e => e.Time)"
                                     YAggregate="@(e => e.Count())"
                                 />
                                <ApexPointSeries 
                                    TItem="UserHistoricalStocks"
                                    Items="_historical"
                                    Name="Profit"
                                    SeriesType="SeriesType.Line"
                                    XValue="@(e => e.Time)"
                                    YAggregate="@(e => e.Sum(e => e.Profit))"
                                />
                            </ApexChart>
                        }
                    }
                </div>

                @*Stocks*@
                <div class="col-md-6">
                    <h4 class="@_userTheme-card">Crypto/Stocks</h4>
                    @if (!_stocksLoaded)
                    {
                        <h2>Could take a little longer </h2> <h4>This is an external API call. Wait times for this to load may vary.</h4>
                        <div class="text-center">
                          <div class="spinner-border" role="status">
                          </div>
                        </div>
                    }
                    else
                    {
                           <div class="row stocksRow">
                           @if (_stocks is null || _stocks.Count == 0)
                           {
                                <h3>There are no stocks available &#127912;</h3>
                           }
                           else
                           {
                            @foreach (var stock in _stocks)
                                {
                                    <div class="card col-md-3 @_userTheme-card">
                                      <div class="card-header @_userTheme-card-header">
                                          <p>
                                              <span style="float: left">@stock.symbol</span> 
                                              <span style="float: right">💎 @stock.GetPrice()</span>
                                          </p>
                                      </div>
                                      <div class="card-body @_userTheme-card-body">
                                          <p>
                                              @{var priceChange = @stock.GetPriceChange();}
                                              @if (priceChange > 0)
                                              {
                                                  <span class="oi oi-arrow-thick-top" style="color: green; font-weight: bold">&nbsp; @priceChange (@stock.priceChangePercent%)</span>
                                              }
                                              else
                                              {
                                                  <span class="oi oi-arrow-thick-bottom" style="color: red; font-weight: bold">&nbsp; @priceChange (@stock.priceChangePercent%)</span>
                                              }
                                          </p>
                                      </div>
                                      <div class="card-footer @_userTheme-card-footer">
                                          <button type="button" class="btn btn-primary @_userTheme-btn-primary" style="float:right" @onclick="(() => OpenDialogModal(stock, ModalType.Assign))">
                                             Buy
                                          </button>
                                      </div>
                                    </div>
                               }
                           }
                           </div>
                    }

                </div>

                <Footer ShouldDisplay="false"></Footer>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@if(_stocksSelectorModalOpen)
{
    <InvestmentDialogModal SelectedStock="_selectedPurchaseStock" OnClose="@OnDialogClose" DisplayType="_modalType" Theme="@_userTheme"></InvestmentDialogModal>
}

@if(_stocksSellModalOpen)
{
    <InvestmentSellDialogModal MatchingStock="_selectedPurchaseStock" UserInvestment="_selectedUserInvestment"  OnClose="@OnDialogClose" DisplayType="_modalType" Theme="@_userTheme"></InvestmentSellDialogModal>
}